---
import { getCollection } from "astro:content";

import BaseLayout from "@/layouts/BaseLayout.astro";
import WorkContent from "@/components/WorkContent";
import { BorderedButton } from "@ryanliu6/xi";

const pageName: string = "Work"
const work = await getCollection("work");
const internships = await getCollection("internships");
---
<BaseLayout pageName={pageName}>
  <section class="flex flex-col justify-center">
    {
      work
        .sort((a, b) => (b.data?.lastDate?.getTime() ?? Infinity) - (a.data?.lastDate?.getTime() ?? Infinity))
        .map((work) => (
          <WorkContent work={work} />
          <hr class="dark:border-zinc-600" />
        )
      )
    }

    <div class="flex justify-center pt-4">
      <BorderedButton id="internButton">
        <p id="internText">Show Internships</p>
      </BorderedButton>
    </div>

    <section id="internSection" class="hidden opacity-0 transition-opacity duration-500 ease-in-out">
      {
        internships
          .sort((a, b) => (b.data?.lastDate?.getTime() ?? Infinity) - (a.data?.lastDate?.getTime() ?? Infinity))
          .map((internships) => (
            <WorkContent work={internships} />
            <hr class="dark:border-zinc-600" />
          )
        )
      }
    </section>
  </section>
</BaseLayout>

<script>
  // astro:page-load with ViewTransitions runs this on every page, have to be specific!
  document.addEventListener("astro:page-load", () => {
    const internButton = document.getElementById("internButton");
    const internText = document.getElementById("internText");

    if (internButton) {
      internButton.addEventListener("click", () => {
        const internSection = document.getElementById("internSection");
        // Logic is for previous state, so has to be backwards!
        if (internSection?.classList.contains("hidden")) {
          internText!.innerHTML = "Hide Internships";
          setTimeout(() => {
            internSection?.classList.replace("opacity-0", "opacity-100");
          }, 50);
        } else {
          internText!.innerHTML = "Show Internships";
          setTimeout(() => {
            internSection?.classList.replace("opacity-100", "opacity-0");
          }, 50);
        }
        internSection?.classList.toggle("hidden");
      })
    }
  });
</script>
